/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.57).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.x.generated.swagger.rest.api.v1;

import ru.x.generated.swagger.model.v1.ResponseUser;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;


@Validated
public interface WhoamiApi {

    @Operation(summary = "Получение пользователя в текущей сессии из JWT токена", description = "Получение пользователя в текущей сессии из JWT токена", tags={ "Обозначение" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Успешный запрос", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseUser.class))),
        
        @ApiResponse(responseCode = "201", description = "Создан"),
        
        @ApiResponse(responseCode = "401", description = "Не авторизированный запрос"),
        
        @ApiResponse(responseCode = "403", description = "Нет прав"),
        
        @ApiResponse(responseCode = "404", description = "Данные не найдены"),
        
        @ApiResponse(responseCode = "500", description = "Ошибка сервера") })
    @RequestMapping(value = "/whoami",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ResponseUser> getUserNameUsingGET();

}

